[{"C:\\Users\\Rashad\\Desktop\\auth\\react-app\\src\\index.js":"1","C:\\Users\\Rashad\\Desktop\\auth\\react-app\\src\\App.js":"2","C:\\Users\\Rashad\\Desktop\\auth\\react-app\\src\\redux\\store.js":"3","C:\\Users\\Rashad\\Desktop\\auth\\react-app\\src\\Footer.js":"4","C:\\Users\\Rashad\\Desktop\\auth\\react-app\\src\\NavBar.js":"5","C:\\Users\\Rashad\\Desktop\\auth\\react-app\\src\\redux\\authSlice.js":"6","C:\\Users\\Rashad\\Desktop\\auth\\react-app\\src\\redux\\productsSlice.js":"7","C:\\Users\\Rashad\\Desktop\\auth\\react-app\\src\\redux\\cartSlice.js":"8","C:\\Users\\Rashad\\Desktop\\auth\\react-app\\src\\Layout.js":"9","C:\\Users\\Rashad\\Desktop\\auth\\react-app\\src\\components\\Activation.js":"10","C:\\Users\\Rashad\\Desktop\\auth\\react-app\\src\\components\\Reset_Password_Confirm.js":"11","C:\\Users\\Rashad\\Desktop\\auth\\react-app\\src\\components\\Login.js":"12","C:\\Users\\Rashad\\Desktop\\auth\\react-app\\src\\components\\Home.js":"13","C:\\Users\\Rashad\\Desktop\\auth\\react-app\\src\\components\\Register.js":"14","C:\\Users\\Rashad\\Desktop\\auth\\react-app\\src\\components\\Logout.js":"15","C:\\Users\\Rashad\\Desktop\\auth\\react-app\\src\\components\\Reset_Password.js":"16","C:\\Users\\Rashad\\Desktop\\auth\\react-app\\src\\components\\product\\Cart.js":"17","C:\\Users\\Rashad\\Desktop\\auth\\react-app\\src\\components\\product\\ViewProduct.js":"18","C:\\Users\\Rashad\\Desktop\\auth\\react-app\\src\\components\\product\\Category.js":"19"},{"size":472,"mtime":1664316152137,"results":"20","hashOfConfig":"21"},{"size":693,"mtime":1663879720818,"results":"22","hashOfConfig":"21"},{"size":329,"mtime":1663347751501,"results":"23","hashOfConfig":"21"},{"size":521,"mtime":1664167503134,"results":"24","hashOfConfig":"21"},{"size":1694,"mtime":1663879682441,"results":"25","hashOfConfig":"21"},{"size":3888,"mtime":1664309893194,"results":"26","hashOfConfig":"21"},{"size":3035,"mtime":1663864927324,"results":"27","hashOfConfig":"21"},{"size":987,"mtime":1664057800715,"results":"28","hashOfConfig":"21"},{"size":5140,"mtime":1665229098822,"results":"29","hashOfConfig":"21"},{"size":850,"mtime":1662581607885,"results":"30","hashOfConfig":"21"},{"size":4959,"mtime":1664168992380,"results":"31","hashOfConfig":"21"},{"size":3757,"mtime":1665953082858,"results":"32","hashOfConfig":"21"},{"size":9887,"mtime":1664982424498,"results":"33","hashOfConfig":"21"},{"size":3208,"mtime":1665953053865,"results":"34","hashOfConfig":"21"},{"size":119,"mtime":1662180240924,"results":"35","hashOfConfig":"21"},{"size":2160,"mtime":1664168230917,"results":"36","hashOfConfig":"21"},{"size":6646,"mtime":1664982446239,"results":"37","hashOfConfig":"21"},{"size":1281,"mtime":1664269706845,"results":"38","hashOfConfig":"21"},{"size":5440,"mtime":1664313335143,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},"563ekb",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"43"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"43"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"43"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"43"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"43"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"43"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"43"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"43"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"43"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"43"},"C:\\Users\\Rashad\\Desktop\\auth\\react-app\\src\\index.js",[],[],[],"C:\\Users\\Rashad\\Desktop\\auth\\react-app\\src\\App.js",["108","109","110"],[],"import React, {useEffect, useState} from \"react\";\nimport NavBar from \"./NavBar\";\nimport Footer from \"./Footer\";\nimport axios from 'axios';\nconst App = () => {\n\n\n  // useEffect(()=>{\n  //   axios\n  //     .get(`http://127.0.0.1:8000/api/cart/?search=${localStorage.getItem(\"email\")}`)\n  //     .then((res)=>{\n  //      localStorage.setItem('qty',res.data.length)\n  //     })\n  //     .catch(err=>console.log(err))\n  // })\n\n  return (\n    <div className=\"container mt-2\" style={{minHeight:'calc(100vh - 60px)', position:'relative'}}>\n\n      {!navigator.onLine?<h4 className=\"text-danger\">No Internet Connection!</h4>:''}\n      <NavBar />\n\n      <Footer/>\n    </div>\n  );\n};\n\nexport default App;\n","C:\\Users\\Rashad\\Desktop\\auth\\react-app\\src\\redux\\store.js",[],[],"C:\\Users\\Rashad\\Desktop\\auth\\react-app\\src\\Footer.js",[],[],"C:\\Users\\Rashad\\Desktop\\auth\\react-app\\src\\NavBar.js",["111","112"],[],"import React from \"react\";\r\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\r\n\r\nimport Activation from \"./components/Activation\";\r\nimport Login from \"./components/Login\";\r\nimport Register from \"./components/Register\";\r\nimport Reset_Password from \"./components/Reset_Password\";\r\nimport Layout from \"./Layout\";\r\nimport Home from \"./components/Home\";\r\nimport Logout from \"./components/Logout\";\r\nimport Reset_Password_Confirm from \"./components/Reset_Password_Confirm\";\r\n\r\nimport ViewProduct from \"./components/product/ViewProduct\";\r\nimport Cart from \"./components/product/Cart\";\r\nimport Category from \"./components/product/Category\";\r\n\r\n\r\n\r\nconst NavBar = ({qty}) => {\r\n  return (\r\n    <div>\r\n      <BrowserRouter>\r\n        <Routes>\r\n          <Route path=\"/\" element={<Layout />}>\r\n            <Route path=\"/\" element={<Home  />} />\r\n            <Route path=\"/register\" element={<Register />} />\r\n            <Route path=\"/login\" element={<Login />} />\r\n            <Route path=\"/reset-password\" element={<Reset_Password />} />\r\n            <Route\r\n              path=\"/password/reset/confirm/:uid/:token\"\r\n              element={<Reset_Password_Confirm />}\r\n            />\r\n            <Route path=\"/activate/:uid/:token\" element={<Activation />} />\r\n            <Route path=\"/logout\" element={<Logout />} />\r\n\r\n            <Route path=\"/viewProduct\" element={<ViewProduct />} />\r\n            <Route path=\"/Cart\" element={<Cart />} />\r\n\r\n            <Route path=\"/Category/:name\" element={<Category />} />\r\n\r\n            <Route path=\"*\" element={<p>Not Found</p>} />\r\n          </Route>\r\n        </Routes>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","C:\\Users\\Rashad\\Desktop\\auth\\react-app\\src\\redux\\authSlice.js",["113","114"],[],"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const registerUser = createAsyncThunk(\r\n  \"auth/registerUser\",\r\n  async (args, { rejectWithValue }) => {\r\n    const res = await axios\r\n      .post(\"http://127.0.0.1:8000/auth/users/\", args)\r\n      .then((response) => response.data)\r\n      .catch((err) => rejectWithValue(err.response.data));\r\n\r\n    return res;\r\n  }\r\n);\r\n\r\nconst initState = {\r\n  done: false,\r\n  pending: false,\r\n  rejected: null,\r\n};\r\n\r\nconst authReducer = createSlice({\r\n  name: \"auth\",\r\n  initialState: initState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [registerUser.pending]: (state, action) => {\r\n      state.pending = true;\r\n      console.log(\"pending\");\r\n      console.log(state.pending);\r\n    },\r\n    [registerUser.fulfilled]: (state, action) => {\r\n      state.done = true;\r\n      Swal.fire({\r\n        customClass: {\r\n          container: \"swal-overlay\",\r\n          title: \"title-color\",\r\n        },\r\n        title: \"user seccessfully registered please check the confirm mail!\",\r\n        confirmButtonColor: \"#113A58\",\r\n        width: 250,\r\n        icon: \"success\",\r\n\r\n        color: \"#716add\",\r\n        background: \"#fff \",\r\n      });\r\n\r\n     \r\n\r\n    },\r\n    [registerUser.rejected]: (state, action) => {\r\n      // state.rejected = action.payload.email[0];\r\n      console.log(\"rejected\");\r\n      // toast.error(action.payload.email[0]);\r\n      // console.log(action.payload.password);\r\n      // Swal.fire({\r\n      //   text: action.payload.email[0],\r\n\r\n      //   width: 250,\r\n      //   // customClass: 'swal-height',\r\n      //   icon:'error',\r\n      //   // heightAuto: false,\r\n      //   // padding: '3em',\r\n      //   color: '#716add',\r\n      //   background: '#fff ',\r\n      // })\r\n      // mp3spider@icloud.com\r\n      if (action.payload.email) {\r\n        Swal.fire({\r\n          customClass: {\r\n            container: \"swal-overlay\",\r\n            title: \"title-color\",\r\n          },\r\n          title: JSON.stringify(action.payload.email[0]),\r\n          confirmButtonColor: \"#113A58\",\r\n          width: 250,\r\n          icon: \"error\",\r\n          color: \"#716add\",\r\n          background: \"#fff \",\r\n        });\r\n      }else if(action.payload.password[0] || action.payload.password[1]\r\n        || action.payload.password[2]){\r\n        Swal.fire({\r\n          customClass: {\r\n            container: \"swal-overlay\",\r\n            title: \"title-color\",\r\n          },\r\n          // title: JSON.stringify(action.payload.password[0]),\r\n          title: action.payload.password[0] || action.payload.password[1]\r\n          || action.payload.password[2],\r\n          confirmButtonColor: \"#113A58\",\r\n          width: 250,\r\n          icon: \"error\",\r\n          color: \"#716add\",\r\n          background: \"#fff \",\r\n        });\r\n      }\r\n      // else {\r\n      //   Swal.fire({\r\n      //     customClass: {\r\n      //       container: \"swal-overlay\",\r\n      //       title: \"title-color\",\r\n      //     },\r\n      //     // title: JSON.stringify(action.payload.password[0]),\r\n      //     title: JSON.stringify(action.payload.password[0]),\r\n      //     confirmButtonColor: \"#113A58\",\r\n      //     width: 250,\r\n      //     icon: \"error\",\r\n      //     color: \"#716add\",\r\n      //     background: \"#fff \",\r\n      //   });\r\n      // }\r\n      // Swal.fire({\r\n      //   customClass: {\r\n      //     container: \"swal-overlay\",\r\n      //     title: \"title-color\",\r\n      //   },\r\n      //   title: JSON.stringify(action.payload),\r\n      //   confirmButtonColor: \"#113A58\",\r\n      //   width: 250,\r\n      //   icon: \"error\",\r\n      //   color: \"#716add\",\r\n      //   background: \"#fff \",\r\n      // });\r\n    },\r\n  },\r\n});\r\nexport default authReducer.reducer;\r\n","C:\\Users\\Rashad\\Desktop\\auth\\react-app\\src\\redux\\productsSlice.js",[],[],"C:\\Users\\Rashad\\Desktop\\auth\\react-app\\src\\redux\\cartSlice.js",[],[],"C:\\Users\\Rashad\\Desktop\\auth\\react-app\\src\\Layout.js",["115","116"],[],"import React, { useState, Fragment, useEffect } from \"react\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Container, Navbar, Nav } from \"react-bootstrap\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCartShopping } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { searchProduct } from \"./redux/productsSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n\r\nimport { cartProduct } from \"./redux/cartSlice\";\r\n\r\nconst Layout = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n  // const counter = 1;\r\n  const email = localStorage.getItem(\"email\");\r\n\r\n  const [access, setAccess] = useState(false);\r\n  //  QTY\r\n  const qty = 0;\r\n\r\n  useEffect(() => {\r\n    const ref = {\r\n      refresh: localStorage.getItem(\"refresh\"),\r\n    };\r\n    axios\r\n      .post(\"http://127.0.0.1:8000/auth/jwt/refresh/\", ref, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((res) => {\r\n        setAccess(true);\r\n      })\r\n      .catch((err) => {\r\n        // console.log(err)\r\n        setAccess(false);\r\n      });\r\n  });\r\n\r\n  // ------------------------Best Code--------------------------------\r\n\r\n  const mail = localStorage.getItem(\"email\");\r\n  // const dispatch = useDispatch();\r\n  const data = useSelector((state) => state.cartProduct.data);\r\n\r\n  useEffect(() => {\r\n    dispatch(cartProduct(mail));\r\n  }, [dispatch]);\r\n\r\n  // useEffect(() => {\r\n  //   // console.log(\"data: \");\r\n  //   // console.log(data);\r\n\r\n  // }, [data]);\r\n\r\n  // ------------------------Best Code--------------------------------\r\n\r\n  const logOut = () => {\r\n    localStorage.removeItem(\"access\");\r\n    localStorage.removeItem(\"email\");\r\n    localStorage.removeItem(\"refresh\");\r\n    setAccess(false);\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const cartCustomer = () => {\r\n    navigate(\"/Cart\");\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {access ? (\r\n        <Fragment>\r\n          <Navbar\r\n            style={{ backgroundColor: \"#0F334E\" }}\r\n            collapseOnSelect\r\n            expand=\"lg\"\r\n            variant=\"dark\"\r\n          >\r\n            <Container>\r\n              <Navbar.Brand href=\"/\"><h2>Ahmed Rashad</h2></Navbar.Brand>\r\n              <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n              <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"me-auto\">\r\n                  <Nav.Link style={{ color: \"white\" }} href=\"/\">\r\n                    Home\r\n                  </Nav.Link>\r\n                  <Nav.Link style={{ color: \"white\" }} href=\"\">\r\n                    {email}\r\n                  </Nav.Link>\r\n                </Nav>\r\n\r\n                <Nav>\r\n                  <Nav.Link eventKey={2}>\r\n                    <FontAwesomeIcon\r\n                      onClick={cartCustomer}\r\n                      style={{ color: \"white\", paddingRight: \"4px\" }}\r\n                      icon={faCartShopping}\r\n                      size={\"1x\"}\r\n                    />\r\n                    <span\r\n                      style={{\r\n                        color: \"white\",\r\n                        paddingRight: \"2px\",\r\n                        fontWeight: \"bold\",\r\n                      }}\r\n                    >\r\n                      {data.length}\r\n                    </span>\r\n                  </Nav.Link>\r\n\r\n                  {/* <div className=\"mt-1 text-center\"> */}\r\n                  <input\r\n                    // onKeyUp={(e) => search(e.key)}\r\n                    onChange={(e) => dispatch(searchProduct(e.target.value))}\r\n                    type={\"text\"}\r\n                    placeholder=\"search\"\r\n                  />\r\n                  {/* </div> */}\r\n\r\n                  <Nav.Link\r\n                    style={{ color: \"white\" }}\r\n                    onClick={logOut}\r\n                    eventKey={2}\r\n                    href=\"/\"\r\n                  >\r\n                    Logout\r\n                  </Nav.Link>\r\n                </Nav>\r\n              </Navbar.Collapse>\r\n            </Container>\r\n          </Navbar>\r\n        </Fragment>\r\n      ) : (\r\n        <Fragment>\r\n          <Navbar style={{ backgroundColor: \"#0F334E\" }} collapseOnSelect expand=\"lg\" variant=\"dark\">\r\n            <Container>\r\n              <Navbar.Brand href=\"/\">Ahmed Rashad</Navbar.Brand>\r\n              <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n              <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav className=\"me-auto\">\r\n                  <Nav.Link style={{ color: \"white\" }} href=\"/\">\r\n                    Home\r\n                  </Nav.Link>\r\n                  <Nav.Link style={{ color: \"white\" }} href=\"/register\">\r\n                    Register\r\n                  </Nav.Link>\r\n                  <Nav.Link style={{ color: \"white\" }} href=\"/login\">\r\n                    Login\r\n                  </Nav.Link>\r\n                </Nav>\r\n              </Navbar.Collapse>\r\n            </Container>\r\n          </Navbar>\r\n        </Fragment>\r\n      )}\r\n\r\n      <Outlet />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","C:\\Users\\Rashad\\Desktop\\auth\\react-app\\src\\components\\Activation.js",["117"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nconst Activation = (props) => {\r\n  const { uid } = useParams();\r\n  const { token } = useParams();\r\n\r\n  const [check, setCheck] = useState(false)\r\n\r\n\r\n  const activateAccount = () => {\r\n    const obj = {\r\n      uid: uid,\r\n      token: token\r\n    }\r\n    console.log(uid);\r\n    console.log(token);\r\n    axios\r\n      .post('http://127.0.0.1:8000/auth/users/activation/',obj)\r\n      .then((res) => setCheck(true))\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n\r\n      <button className=\"btn btn-primary mt-3\" onClick={activateAccount}>Verify Account</button>\r\n      {check?<h4 className = \"mt-3\">Congrats Your Email Has Been Activated</h4>:''}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Activation;\r\n","C:\\Users\\Rashad\\Desktop\\auth\\react-app\\src\\components\\Reset_Password_Confirm.js",[],[],"C:\\Users\\Rashad\\Desktop\\auth\\react-app\\src\\components\\Login.js",["118","119","120"],[],"C:\\Users\\Rashad\\Desktop\\auth\\react-app\\src\\components\\Home.js",["121","122","123","124"],[],"import React, { useState, useEffect, Fragment } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, Card, Container, Row, Col, Nav } from \"react-bootstrap\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getProduct } from \"../redux/productsSlice\";\r\nimport { getItem } from \"../redux/productsSlice\";\r\n\r\nimport { cartProduct } from \"../redux/cartSlice\";\r\n\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n  const product = useSelector((state) => state.products.products);\r\n  const item = useSelector((state) => state.products.item);\r\n\r\n  const navigate = useNavigate();\r\n  const [access, setAccess] = useState(false);\r\n\r\n  const [emailAddress, setEmailAddress] = useState(0);\r\n\r\n  const [customer, setCustomer] = useState([]);\r\n\r\n  // const  [category, setCategory] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const ref = {\r\n      refresh: localStorage.getItem(\"refresh\"),\r\n    };\r\n    axios\r\n      .post(\"http://127.0.0.1:8000/auth/jwt/refresh/\", ref, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.data.access) {\r\n          setAccess(true);\r\n          dispatch(getProduct());\r\n        }\r\n      });\r\n\r\n    axios\r\n      .get(\r\n        `http://127.0.0.1:8000/api/us/?search=${localStorage.getItem(\"email\")}`\r\n      )\r\n      .then((res) => {\r\n        setEmailAddress(res.data[0].id);\r\n        setCustomer(res.data);\r\n      });\r\n    console.log(\"email address: \" + emailAddress);\r\n\r\n    // .catch((err) => setAccess(false));\r\n    // console.log(category);\r\n  }, [dispatch, item, setEmailAddress, emailAddress, setCustomer]);\r\n\r\n  // -------------------------QTY---------------------------------------\r\n\r\n  const mail = localStorage.getItem(\"email\");\r\n  // const dispatch = useDispatch();\r\n  const data = useSelector((state) => state.cartProduct.data);\r\n\r\n  useEffect(() => {\r\n    dispatch(cartProduct(mail));\r\n  }, [dispatch]);\r\n\r\n  // -------------------------QTY---------------------------------------\r\n\r\n  // --------------------------\r\n  const getItemId = (id) => {\r\n    dispatch(getItem(id));\r\n    navigate(\"/viewProduct\");\r\n  };\r\n\r\n  //  Error Here\r\n  const addToCart = (productId) => {\r\n    const obj = {\r\n      customer: emailAddress,\r\n      product: productId,\r\n      complete: false,\r\n      // qty: 1,\r\n    };\r\n\r\n    axios\r\n      .post(\"http://127.0.0.1:8000/api/cart/\", obj)\r\n      .then((res) => {\r\n        // Swal.fire('Cart Product','Product added successfully','success')\r\n        // toast.success(\"Product added successfully\");\r\n\r\n        Swal.fire({\r\n          customClass: {\r\n            container: \"swal-overlay\",\r\n            title: \"title-color\",\r\n          },\r\n          title: \"Product added successfully\",\r\n          confirmButtonColor: \"#113A58\",\r\n          width: 250,\r\n          icon: \"success\",\r\n\r\n          color: \"#716add\",\r\n          background: \"#fff \",\r\n        });\r\n\r\n        dispatch(cartProduct(mail));\r\n      })\r\n      .catch((err) => toast.error(err.message));\r\n  };\r\n\r\n  // ----------------------------------------------------------------\r\n\r\n  const getCategory = (value) => {\r\n    navigate(\"/category/\" + value);\r\n  };\r\n\r\n  // -------------------------Pagination------------------------\r\n\r\n  // -------------------------Pagination------------------------\r\n\r\n  return (\r\n    <div className=\"mt-2 p-1\">\r\n      {access ? (\r\n        <Fragment>\r\n          <nav>\r\n            <Nav className=\"justify-content-center\" activeKey=\"/home\">\r\n              <Nav.Item>\r\n                <Nav.Link\r\n                  className=\"link-shadow\"\r\n                  onClick={(e) => getCategory(\"Electronics\")}\r\n                  style={{\r\n                    fontSize: \"16px\",\r\n                    color: \"#0F334E\",\r\n                    fontWeight: \"bold\",\r\n                  }}\r\n                >\r\n                  Electronics\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n\r\n              <Nav.Item>\r\n                <Nav.Link\r\n                  className=\"link-shadow\"\r\n                  onClick={(e) => getCategory(\"Fashion\")}\r\n                  style={{\r\n                    fontSize: \"16px\",\r\n                    color: \"#0F334E\",\r\n                    fontWeight: \"bold\",\r\n                  }}\r\n                  eventKey=\"link-1\"\r\n                >\r\n                  Fashion\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n\r\n              <Nav.Item>\r\n                <Nav.Link\r\n                  className=\"link-shadow\"\r\n                  onClick={(e) => getCategory(\"Accessories\")}\r\n                  style={{\r\n                    fontSize: \"16px\",\r\n                    color: \"#0F334E\",\r\n                    fontWeight: \"bold\",\r\n                  }}\r\n                  eventKey=\"link-2\"\r\n                >\r\n                  Accessories\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link\r\n                  className=\"link-shadow\"\r\n                  onClick={(e) => getCategory(\"Furniture\")}\r\n                  style={{\r\n                    fontSize: \"16px\",\r\n                    color: \"#0F334E\",\r\n                    fontWeight: \"bold\",\r\n                  }}\r\n                  eventKey=\"link-2\"\r\n                >\r\n                  Furniture\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link\r\n                  className=\"link-shadow\"\r\n                  onClick={(e) => getCategory(\"Home Appliances\")}\r\n                  style={{\r\n                    fontSize: \"16px\",\r\n                    color: \"#0F334E\",\r\n                    fontWeight: \"bold\",\r\n                  }}\r\n                  eventKey=\"link-2\"\r\n                >\r\n                  Home Appliances\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link\r\n                  className=\"link-shadow\"\r\n                  onClick={(e) => getCategory(\"Toys\")}\r\n                  style={{\r\n                    fontSize: \"16px\",\r\n                    color: \"#0F334E\",\r\n                    fontWeight: \"bold\",\r\n                  }}\r\n                  eventKey=\"link-2\"\r\n                >\r\n                  Toys\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n              <Nav.Item>\r\n                <Nav.Link\r\n                  className=\"link-shadow\"\r\n                  onClick={(e) => getCategory(\"Others\")}\r\n                  style={{\r\n                    fontSize: \"16px\",\r\n                    color: \"#0F334E\",\r\n                    fontWeight: \"bold\",\r\n                  }}\r\n                  eventKey=\"link-2\"\r\n                >\r\n                  Others\r\n                </Nav.Link>\r\n              </Nav.Item>\r\n            </Nav>\r\n          </nav>\r\n\r\n          <Container>\r\n            <Row className=\"justify-content-center align-items-center\">\r\n              {product.map((value, index) => {\r\n                return (\r\n                  <Col className=\"mt-3\" xs=\"auto\" key={index}>\r\n                    <Card\r\n                      className=\"shadow-lg rounded hoverElement\"\r\n                      style={{ width: \"15rem\", borderRadius: 15 }}\r\n                    >\r\n                      <div className=\"text-center\">\r\n                        <Card.Img\r\n                          style={{\r\n                            height: \"250px\",\r\n                            width: \"230px\",\r\n                            padding: \"5px\",\r\n\r\n                            // objectFit: \"none\",\r\n                          }}\r\n                          variant=\"top\"\r\n                          src={value.image}\r\n                        />\r\n                      </div>\r\n                      <Card.Body>\r\n                        <Card.Title\r\n                          style={{\r\n                            fontSize: \"17px\",\r\n                            whiteSpace: \"nowrap\",\r\n                            overflow: \"hidden\",\r\n                            textOverflow: \"ellipsis\",\r\n                          }}\r\n                        >\r\n                          {value.name}\r\n                        </Card.Title>\r\n                        <Card.Text\r\n                          style={{\r\n                            whiteSpace: \"nowrap\",\r\n                            overflow: \"hidden\",\r\n                            textOverflow: \"ellipsis\",\r\n                          }}\r\n                        >\r\n                          {value.description}\r\n                        </Card.Text>\r\n                        <Card.Text>{value.price}$</Card.Text>\r\n\r\n                        <div className=\"d-flex aligh-items-center justify-content-between\">\r\n                          <Button\r\n                            onClick={() => getItemId(value.id)}\r\n                            style={{ background: \"#113A58\" }}\r\n                            variant=\"primary\"\r\n                          >\r\n                            View\r\n                          </Button>\r\n\r\n                          <Button\r\n                            onClick={() => addToCart(value.id)}\r\n                            style={{ background: \"#113A58\" }}\r\n                            variant=\"primary\"\r\n                          >\r\n                            Add Cart\r\n                          </Button>\r\n                        </div>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  </Col>\r\n                );\r\n              })}\r\n            </Row>\r\n          </Container>\r\n        </Fragment>\r\n      ) : (\r\n        <h4 style={{ textAlign: \"center\", marginTop: \"10px\", color: \"#777\" }}>\r\n          You do not have permission, please login\r\n        </h4>\r\n      )}\r\n\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Users\\Rashad\\Desktop\\auth\\react-app\\src\\components\\Register.js",["125","126","127","128","129"],[],"C:\\Users\\Rashad\\Desktop\\auth\\react-app\\src\\components\\Logout.js",[],[],"C:\\Users\\Rashad\\Desktop\\auth\\react-app\\src\\components\\Reset_Password.js",["130"],[],"import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport Swal from 'sweetalert2'\r\nconst Reset_Password = () => {\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  const SubmitForm = (e) => {\r\n    e.preventDefault();\r\n    const obj = {\r\n      email: email,\r\n    };\r\n\r\n    axios\r\n      .post(\"http://127.0.0.1:8000/auth/users/reset_password/\", obj, {\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      })\r\n      .then((res) =>\r\n        // toast.success(\r\n        //   \"Please Check your email inbox \"\r\n        // )\r\n        Swal.fire({\r\n          title:'Reset Password',\r\n          text: 'Please Check your email inbox',\r\n          width: 250,\r\n          // customClass: 'swal-height',\r\n          icon:'info',\r\n          // heightAuto: false,\r\n          // padding: '3em',\r\n          color: '#716add',\r\n          background: '#fff ',\r\n        })\r\n      )\r\n      .catch((err) => {\r\n        // toast.error(err)\r\n        // console.log(err.response.data.email[0]);\r\n        Swal.fire({\r\n          title:'Opps!',\r\n          text: err.response.data.email[0],\r\n          width: 250,\r\n          // customClass: 'swal-height',\r\n          icon:'error',\r\n          // heightAuto: false,\r\n          // padding: '3em',\r\n          color: '#716add',\r\n          background: '#fff ',\r\n        })\r\n      });\r\n    setEmail(\"\");\r\n  };\r\n  return (\r\n    <div className=\"w-50 m-auto mt-4\">\r\n\r\n      <form className=\"form-group\" onSubmit={SubmitForm}>\r\n        <h3 className=\"mt-2 m-auto align-center text-muted\">Reset Password</h3>\r\n        <input\r\n          value={email}\r\n          onChange={(e) => setEmail(e.target.value)}\r\n          className=\"form-control mt-2\"\r\n          required\r\n          type={\"email\"}\r\n          placeholder=\"email\"\r\n        />\r\n\r\n        <input\r\n        style={{backgroundColor: \"#113A58\",  letterSpacing:'1px'}}\r\n          className=\"form-control text-white mt-2 fw-bold\"\r\n          type={\"submit\"}\r\n          value=\"Reset Password\"\r\n        />\r\n      </form>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Reset_Password;\r\n","C:\\Users\\Rashad\\Desktop\\auth\\react-app\\src\\components\\product\\Cart.js",["131","132"],[],"import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { Button, Card, Container, Row, Col } from \"react-bootstrap\";\r\nimport { cartProduct } from \"../../redux/cartSlice\";\r\nimport axios from \"axios\";\r\n\r\n// import GooglePayButton from './GooglePayButton';\r\nimport GooglePayButton from \"@google-pay/button-react\";\r\n\r\nconst Cart = () => {\r\n  const mail = localStorage.getItem(\"email\");\r\n  const dispatch = useDispatch();\r\n  const data = useSelector((state) => state.cartProduct.data);\r\n\r\n  useEffect(() => {\r\n    console.log(\"hello\");\r\n    dispatch(cartProduct(mail));\r\n  }, [dispatch]);\r\n\r\n  // ---------------------------Comment ------------------------------\r\n\r\n  // useEffect(() => {\r\n  //   // console.log(\"data: \");\r\n  //   // console.log(data);\r\n\r\n  // }, [data]);\r\n\r\n  // ---------------------------Comment ------------------------------\r\n\r\n  const deleteProduct = (id) => {\r\n    axios\r\n      .delete(`http://127.0.0.1:8000/api/cart/${id}/`)\r\n      .then((res) => {\r\n        toast.success(\"Product Has Been Deleted\");\r\n        dispatch(cartProduct(mail));\r\n      })\r\n      .catch((err) => toast.error(err));\r\n  };\r\n\r\n  // __________________Send Email ___________________\r\n\r\n  const sendMail = (pro, mail) => {\r\n    axios\r\n      .get(`http://127.0.0.1:8000/send/${pro}/${mail}`)\r\n      .then((res) => console.log(res.data))\r\n      .catch((err) => console.log(err.response));\r\n  };\r\n  // __________________Send Email ___________________\r\n\r\n  return (\r\n    <div>\r\n      <Container className=\"\">\r\n        <Row className=\"justify-content-center align-items-center\">\r\n          <h3 className=\"text-center mt-2 text-muted\">Cart Products</h3>\r\n          {/* <h2 className=\"text-center p-1\">Quantity: {data.length}</h2> */}\r\n          {data.map((item, index) => {\r\n            return (\r\n              <Col className=\"mt-3\" xs=\"auto\" key={index}>\r\n                <Card\r\n                  style={{ width: \"17rem\", borderRadius: 15 }}\r\n                  className=\"shadow-lg rounded hoverElement\"\r\n                >\r\n                  <Card.Img\r\n                    style={{\r\n                      height: \"300px\",\r\n                    }}\r\n                    variant=\"top\"\r\n                    src={\"http://127.0.0.1:8000\" + item.product.image}\r\n                  />\r\n\r\n                  <Card.Body>\r\n                    <Card.Title\r\n                      style={{\r\n                        fontSize: \"17px\",\r\n                        whiteSpace: \"nowrap\",\r\n                        overflow: \"hidden\",\r\n                        textOverflow: \"ellipsis\",\r\n                      }}\r\n                      className=\"fw-bold\"\r\n                    >\r\n                      {item.product.name}\r\n                    </Card.Title>\r\n                    <Card.Text className=\"fw-bold\">\r\n                      Price: {item.product.price}\r\n                    </Card.Text>\r\n                    <Card.Text className=\"fw-bold\">Qty: {item.qty}</Card.Text>\r\n\r\n                    <div className=\"text-center\">\r\n                      <Button\r\n                        onClick={() => deleteProduct(item.id)}\r\n                        style={{\r\n                          background: \"#113A58\",\r\n                          width: \"100%\",\r\n                          marginBottom: \"5px\",\r\n                        }}\r\n                        variant=\"primary\"\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n\r\n                      <Button\r\n                        onClick={() => sendMail(item.product.name, mail)}\r\n                        style={{\r\n                          background: \"#113A58\",\r\n                          width: \"100%\",\r\n                          marginBottom: \"5px\",\r\n                        }}\r\n                        variant=\"primary\"\r\n                      >\r\n                        Send Email\r\n                      </Button>\r\n\r\n                      {/* ----------------------- */}\r\n\r\n                      {/* <Button\r\n                        onClick={() =>\r\n                          toast.success(\"Payment Completed Successfully\")\r\n                        }\r\n                        style={{ background: \"#113A58\" }}\r\n                        variant=\"primary\"\r\n                      >\r\n                        Payment\r\n                      </Button> */}\r\n\r\n                      <GooglePayButton\r\n                        environment=\"TEST\"\r\n                        paymentRequest={{\r\n                          apiVersion: 2,\r\n                          apiVersionMinor: 0,\r\n                          allowedPaymentMethods: [\r\n                            {\r\n                              type: \"CARD\",\r\n                              parameters: {\r\n                                allowedAuthMethods: [\r\n                                  \"PAN_ONLY\",\r\n                                  \"CRYPTOGRAM_3DS\",\r\n                                ],\r\n                                allowedCardNetworks: [\"MASTERCARD\", \"VISA\"],\r\n                              },\r\n                              tokenizationSpecification: {\r\n                                type: \"PAYMENT_GATEWAY\",\r\n                                parameters: {\r\n                                  gateway: \"example\",\r\n                                  gatewayMerchantId: \"exampleGatewayMerchantId\",\r\n                                },\r\n                              },\r\n                            },\r\n                          ],\r\n                          merchantInfo: {\r\n                            merchantId: \"12345678901234567890\",\r\n                            merchantName: \"Demo Merchant\",\r\n                          },\r\n                          transactionInfo: {\r\n                            totalPriceStatus: \"FINAL\",\r\n                            totalPriceLabel: \"Total\",\r\n                            totalPrice: parseFloat(item.product.price).toFixed(\r\n                              2\r\n                            ),\r\n                            currencyCode: \"USD\",\r\n                            countryCode: \"US\",\r\n                          },\r\n                        }}\r\n                        onLoadPaymentData={(paymentRequest) => {\r\n                          console.log(\"load payment data\", paymentRequest);\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            );\r\n          })}\r\n        </Row>\r\n      </Container>\r\n\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","C:\\Users\\Rashad\\Desktop\\auth\\react-app\\src\\components\\product\\ViewProduct.js",["133","134","135"],[],"import React, {useEffect} from \"react\";\r\n// import axios from \"axios\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nconst ViewProduct = () => {\r\n\r\n  // useSelector is important because its doing rerender and useDispatch.\r\n  const item = useSelector((state) => state.products.item);\r\n\r\n  // console.log('id: '+localStorage.getItem('id'));\r\n  const Name = localStorage.getItem('name')\r\n  const description = localStorage.getItem('description')\r\n  const category = localStorage.getItem('category')\r\n  const price = localStorage.getItem('price')\r\n  const image = localStorage.getItem('image')\r\n\r\n  return (\r\n    <div className=\"p-2 w-100 m-auto text-center mt-2\">\r\n\r\n     <p style={{color:'#888'}} className=\"fw-bolder\">Product: {Name}</p>\r\n        <p style={{color:'#888'}} className=\"fw-bolder\">Description: {description}</p>\r\n        <p style={{color:'#888'}} className=\"fw-bolder\">Category: {category}</p>\r\n        <p style={{color:'#888'}} className=\"fw-bolder\">Price: {price} $</p>\r\n\r\n        <div style={{width:'200px', height:'240px'}} className=\"hoverElement m-auto d-flex justify-content-center align-items-center\">\r\n            <img style={{width:'100%', height:'100%'}} className='mt-3' src={image}/>\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewProduct;\r\n","C:\\Users\\Rashad\\Desktop\\auth\\react-app\\src\\components\\product\\Category.js",["136","137","138","139","140"],[],"import React, { useEffect, useState, Fragment } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport { getItem } from \"../../redux/productsSlice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button, Card, Container, Row, Col } from \"react-bootstrap\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\n\r\nimport { cartProduct } from \"../../redux/cartSlice\";\r\n\r\nimport Swal from \"sweetalert2\";\r\n\r\nconst Category = () => {\r\n  const dispatch = useDispatch();\r\n  const navigate = useNavigate();\r\n\r\n  const item = useSelector((state) => state.products.item);\r\n\r\n  const { name } = useParams();\r\n  const [allData, setAllData] = useState([]);\r\n  const [emailAddress, setEmailAddress] = useState(0);\r\n\r\n  useEffect(() => {\r\n    // console.log(name);\r\n    axios\r\n      .get(`http://127.0.0.1:8000/api/products/?category=${name}`)\r\n      .then((response) => {\r\n        setAllData(response.data);\r\n      })\r\n      .catch((err) => toast.error(err.message));\r\n\r\n    axios\r\n      .get(\r\n        `http://127.0.0.1:8000/api/us/?search=${localStorage.getItem(\"email\")}`\r\n      )\r\n      .then((res) => {\r\n        setEmailAddress(res.data[0].id);\r\n      });\r\n    console.log(\"email address: \" + emailAddress);\r\n  }, [emailAddress]);\r\n\r\n  // -------------------------QTY-----------------------------\r\n\r\n  const mail = localStorage.getItem(\"email\");\r\n  // const dispatch = useDispatch();\r\n  const data = useSelector((state) => state.cartProduct.data);\r\n\r\n  useEffect(() => {\r\n    dispatch(cartProduct(mail));\r\n  }, [dispatch]);\r\n\r\n  // -------------------------QTY-----------------------------\r\n  const getItemId = (id) => {\r\n    dispatch(getItem(id));\r\n    navigate(\"/viewProduct\");\r\n  };\r\n\r\n  const addToCart = (productId) => {\r\n    const obj = {\r\n      customer: emailAddress,\r\n      product: productId,\r\n      complete: false,\r\n      // qty: 1,\r\n    };\r\n\r\n    axios\r\n      .post(\"http://127.0.0.1:8000/api/cart/\", obj)\r\n      .then((res) => {\r\n        // toast.success(\"Product added successfully\");\r\n\r\n        Swal.fire({\r\n          customClass: {\r\n            container: \"swal-overlay\",\r\n            title:'title-color'\r\n          },\r\n          title: \"Product added successfully\",\r\n          confirmButtonColor: \"#113A58\",\r\n          width: 250,\r\n          icon: \"success\",\r\n\r\n          color: \"#716add\",\r\n          background: \"#fff \",\r\n        });\r\n\r\n        dispatch(cartProduct(mail));\r\n      })\r\n      .catch((err) => toast.error(err.message));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Fragment>\r\n        <h3 style={{ textAlign: \"center\", marginTop: \"5px\", color: \"#777\" }}>\r\n          {name}\r\n        </h3>\r\n      </Fragment>\r\n\r\n      <Fragment>\r\n        <Container>\r\n          <Row className=\"justify-content-center align-items-center\">\r\n            {allData.map((value, index) => {\r\n              return (\r\n                <Col className=\"mt-3\" xs=\"auto\" key={index}>\r\n                  <Card\r\n                    className=\"shadow-lg rounded hoverElement\"\r\n                    style={{ width: \"15rem\", borderRadius: 15 }}\r\n                  >\r\n                    <div className=\"text-center\">\r\n                      <Card.Img\r\n                        style={{\r\n                          height: \"250px\",\r\n                          width: \"230px\",\r\n                          padding: \"5px\",\r\n\r\n                          // objectFit: \"none\",\r\n                        }}\r\n                        variant=\"top\"\r\n                        src={value.image}\r\n                      />\r\n                    </div>\r\n                    <Card.Body>\r\n                      <Card.Title\r\n                        style={{\r\n                          fontSize: \"17px\",\r\n                          whiteSpace: \"nowrap\",\r\n                          overflow: \"hidden\",\r\n                          textOverflow: \"ellipsis\",\r\n                        }}\r\n                      >\r\n                        {value.name}\r\n                      </Card.Title>\r\n                      <Card.Text\r\n                        style={{\r\n                          whiteSpace: \"nowrap\",\r\n                          overflow: \"hidden\",\r\n                          textOverflow: \"ellipsis\",\r\n                        }}\r\n                      >\r\n                        {value.description}\r\n                      </Card.Text>\r\n                      <Card.Text>{value.price}$</Card.Text>\r\n\r\n                      <div className=\"d-flex aligh-items-center justify-content-between\">\r\n                        <Button\r\n                          onClick={() => getItemId(value.id)}\r\n                          style={{ background: \"#113A58\" }}\r\n                          variant=\"primary\"\r\n                        >\r\n                          View\r\n                        </Button>\r\n\r\n                        <Button\r\n                          onClick={() => addToCart(value.id)}\r\n                          style={{ background: \"#113A58\" }}\r\n                          variant=\"primary\"\r\n                        >\r\n                          Add Cart\r\n                        </Button>\r\n                      </div>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              );\r\n            })}\r\n          </Row>\r\n        </Container>\r\n      </Fragment>\r\n      <ToastContainer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n",{"ruleId":"141","severity":1,"message":"142","line":1,"column":16,"nodeType":"143","messageId":"144","endLine":1,"endColumn":25},{"ruleId":"141","severity":1,"message":"145","line":1,"column":27,"nodeType":"143","messageId":"144","endLine":1,"endColumn":35},{"ruleId":"141","severity":1,"message":"146","line":4,"column":8,"nodeType":"143","messageId":"144","endLine":4,"endColumn":13},{"ruleId":"147","severity":1,"message":"148","line":28,"column":52,"nodeType":"149","messageId":"150","endLine":28,"endColumn":70},{"ruleId":"147","severity":1,"message":"151","line":31,"column":24,"nodeType":"149","messageId":"150","endLine":31,"endColumn":50},{"ruleId":"141","severity":1,"message":"152","line":3,"column":10,"nodeType":"143","messageId":"144","endLine":3,"endColumn":21},{"ruleId":"141","severity":1,"message":"153","line":4,"column":10,"nodeType":"143","messageId":"144","endLine":4,"endColumn":15},{"ruleId":"141","severity":1,"message":"154","line":23,"column":9,"nodeType":"143","messageId":"144","endLine":23,"endColumn":12},{"ruleId":"155","severity":1,"message":"156","line":52,"column":6,"nodeType":"157","endLine":52,"endColumn":16,"suggestions":"158"},{"ruleId":"141","severity":1,"message":"142","line":1,"column":27,"nodeType":"143","messageId":"144","endLine":1,"endColumn":36},{"ruleId":"141","severity":1,"message":"142","line":1,"column":27,"nodeType":"143","messageId":"144","endLine":1,"endColumn":36},{"ruleId":"141","severity":1,"message":"153","line":3,"column":26,"nodeType":"143","messageId":"144","endLine":3,"endColumn":31},{"ruleId":"141","severity":1,"message":"159","line":4,"column":16,"nodeType":"143","messageId":"144","endLine":4,"endColumn":22},{"ruleId":"141","severity":1,"message":"160","line":5,"column":23,"nodeType":"143","messageId":"144","endLine":5,"endColumn":27},{"ruleId":"141","severity":1,"message":"161","line":25,"column":10,"nodeType":"143","messageId":"144","endLine":25,"endColumn":18},{"ruleId":"141","severity":1,"message":"162","line":64,"column":9,"nodeType":"143","messageId":"144","endLine":64,"endColumn":13},{"ruleId":"155","severity":1,"message":"156","line":68,"column":6,"nodeType":"157","endLine":68,"endColumn":16,"suggestions":"163"},{"ruleId":"141","severity":1,"message":"142","line":1,"column":27,"nodeType":"143","messageId":"144","endLine":1,"endColumn":36},{"ruleId":"141","severity":1,"message":"153","line":5,"column":26,"nodeType":"143","messageId":"144","endLine":5,"endColumn":31},{"ruleId":"141","severity":1,"message":"164","line":16,"column":11,"nodeType":"143","messageId":"144","endLine":16,"endColumn":15},{"ruleId":"141","severity":1,"message":"165","line":16,"column":17,"nodeType":"143","messageId":"144","endLine":16,"endColumn":25},{"ruleId":"141","severity":1,"message":"166","line":18,"column":9,"nodeType":"143","messageId":"144","endLine":18,"endColumn":17},{"ruleId":"141","severity":1,"message":"153","line":3,"column":26,"nodeType":"143","messageId":"144","endLine":3,"endColumn":31},{"ruleId":"141","severity":1,"message":"145","line":1,"column":17,"nodeType":"143","messageId":"144","endLine":1,"endColumn":25},{"ruleId":"155","severity":1,"message":"156","line":19,"column":6,"nodeType":"157","endLine":19,"endColumn":16,"suggestions":"167"},{"ruleId":"141","severity":1,"message":"142","line":1,"column":16,"nodeType":"143","messageId":"144","endLine":1,"endColumn":25},{"ruleId":"141","severity":1,"message":"168","line":8,"column":9,"nodeType":"143","messageId":"144","endLine":8,"endColumn":13},{"ruleId":"169","severity":1,"message":"170","line":26,"column":13,"nodeType":"149","endLine":26,"endColumn":86},{"ruleId":"141","severity":1,"message":"160","line":8,"column":23,"nodeType":"143","messageId":"144","endLine":8,"endColumn":27},{"ruleId":"141","severity":1,"message":"168","line":18,"column":9,"nodeType":"143","messageId":"144","endLine":18,"endColumn":13},{"ruleId":"155","severity":1,"message":"171","line":41,"column":6,"nodeType":"157","endLine":41,"endColumn":20,"suggestions":"172"},{"ruleId":"141","severity":1,"message":"162","line":47,"column":9,"nodeType":"143","messageId":"144","endLine":47,"endColumn":13},{"ruleId":"155","severity":1,"message":"156","line":51,"column":6,"nodeType":"157","endLine":51,"endColumn":16,"suggestions":"173"},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'axios' is defined but never used.","react/jsx-pascal-case","Imported JSX component Reset_Password must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component Reset_Password_Confirm must be in PascalCase or SCREAMING_SNAKE_CASE","'useNavigate' is defined but never used.","'toast' is defined but never used.","'qty' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'mail'. Either include it or remove the dependency array.","ArrayExpression",["174"],"'Outlet' is defined but never used.","'Link' is defined but never used.","'customer' is assigned a value but never used.","'data' is assigned a value but never used.",["175"],"'done' is assigned a value but never used.","'rejected' is assigned a value but never used.","'navigate' is assigned a value but never used.",["176"],"'item' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'name'. Either include it or remove the dependency array.",["177"],["178"],{"desc":"179","fix":"180"},{"desc":"179","fix":"181"},{"desc":"179","fix":"182"},{"desc":"183","fix":"184"},{"desc":"179","fix":"185"},"Update the dependencies array to be: [dispatch, mail]",{"range":"186","text":"187"},{"range":"188","text":"187"},{"range":"189","text":"187"},"Update the dependencies array to be: [emailAddress, name]",{"range":"190","text":"191"},{"range":"192","text":"187"},[1504,1514],"[dispatch, mail]",[2081,2091],[690,700],[1325,1339],"[emailAddress, name]",[1622,1632]]