{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport Swal from \"sweetalert2\";\nexport const registerUser = createAsyncThunk(\"auth/registerUser\", async (args, _ref) => {\n  let {\n    rejectWithValue\n  } = _ref;\n  const res = await axios.post(\"http://127.0.0.1:8000/auth/users/\", args).then(response => response.data).catch(err => rejectWithValue(err.response.data));\n  return res;\n});\nconst initState = {\n  done: false,\n  pending: false,\n  rejected: null\n};\nconst authReducer = createSlice({\n  name: \"auth\",\n  initialState: initState,\n  reducers: {},\n  extraReducers: {\n    [registerUser.pending]: (state, action) => {\n      state.pending = true;\n      console.log(\"pending\");\n      console.log(state.pending);\n    },\n    [registerUser.fulfilled]: (state, action) => {\n      state.done = true;\n      Swal.fire({\n        customClass: {\n          container: \"swal-overlay\",\n          title: \"title-color\"\n        },\n        title: \"user seccessfully registered please check the confirm mail!\",\n        confirmButtonColor: \"#113A58\",\n        width: 250,\n        icon: \"success\",\n        color: \"#716add\",\n        background: \"#fff \"\n      });\n    },\n    [registerUser.rejected]: (state, action) => {\n      // state.rejected = action.payload.email[0];\n      console.log(\"rejected\"); // toast.error(action.payload.email[0]);\n      // console.log(action.payload.password);\n      // Swal.fire({\n      //   text: action.payload.email[0],\n      //   width: 250,\n      //   // customClass: 'swal-height',\n      //   icon:'error',\n      //   // heightAuto: false,\n      //   // padding: '3em',\n      //   color: '#716add',\n      //   background: '#fff ',\n      // })\n      // mp3spider@icloud.com\n\n      if (action.payload.email) {\n        Swal.fire({\n          customClass: {\n            container: \"swal-overlay\",\n            title: \"title-color\"\n          },\n          title: JSON.stringify(action.payload.email[0]),\n          confirmButtonColor: \"#113A58\",\n          width: 250,\n          icon: \"error\",\n          color: \"#716add\",\n          background: \"#fff \"\n        });\n      } else if (action.payload.password[0] || action.payload.password[1] || action.payload.password[2]) {\n        Swal.fire({\n          customClass: {\n            container: \"swal-overlay\",\n            title: \"title-color\"\n          },\n          // title: JSON.stringify(action.payload.password[0]),\n          title: action.payload.password[0] || action.payload.password[1] || action.payload.password[2],\n          confirmButtonColor: \"#113A58\",\n          width: 250,\n          icon: \"error\",\n          color: \"#716add\",\n          background: \"#fff \"\n        });\n      } // else {\n      //   Swal.fire({\n      //     customClass: {\n      //       container: \"swal-overlay\",\n      //       title: \"title-color\",\n      //     },\n      //     // title: JSON.stringify(action.payload.password[0]),\n      //     title: JSON.stringify(action.payload.password[0]),\n      //     confirmButtonColor: \"#113A58\",\n      //     width: 250,\n      //     icon: \"error\",\n      //     color: \"#716add\",\n      //     background: \"#fff \",\n      //   });\n      // }\n      // Swal.fire({\n      //   customClass: {\n      //     container: \"swal-overlay\",\n      //     title: \"title-color\",\n      //   },\n      //   title: JSON.stringify(action.payload),\n      //   confirmButtonColor: \"#113A58\",\n      //   width: 250,\n      //   icon: \"error\",\n      //   color: \"#716add\",\n      //   background: \"#fff \",\n      // });\n\n    }\n  }\n});\nexport default authReducer.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","useNavigate","toast","Swal","registerUser","args","rejectWithValue","res","post","then","response","data","catch","err","initState","done","pending","rejected","authReducer","name","initialState","reducers","extraReducers","state","action","console","log","fulfilled","fire","customClass","container","title","confirmButtonColor","width","icon","color","background","payload","email","JSON","stringify","password","reducer"],"sources":["C:/Users/Rashad/Desktop/auth/react-app/src/redux/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nexport const registerUser = createAsyncThunk(\r\n  \"auth/registerUser\",\r\n  async (args, { rejectWithValue }) => {\r\n    const res = await axios\r\n      .post(\"http://127.0.0.1:8000/auth/users/\", args)\r\n      .then((response) => response.data)\r\n      .catch((err) => rejectWithValue(err.response.data));\r\n\r\n    return res;\r\n  }\r\n);\r\n\r\nconst initState = {\r\n  done: false,\r\n  pending: false,\r\n  rejected: null,\r\n};\r\n\r\nconst authReducer = createSlice({\r\n  name: \"auth\",\r\n  initialState: initState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [registerUser.pending]: (state, action) => {\r\n      state.pending = true;\r\n      console.log(\"pending\");\r\n      console.log(state.pending);\r\n    },\r\n    [registerUser.fulfilled]: (state, action) => {\r\n      state.done = true;\r\n      Swal.fire({\r\n        customClass: {\r\n          container: \"swal-overlay\",\r\n          title: \"title-color\",\r\n        },\r\n        title: \"user seccessfully registered please check the confirm mail!\",\r\n        confirmButtonColor: \"#113A58\",\r\n        width: 250,\r\n        icon: \"success\",\r\n\r\n        color: \"#716add\",\r\n        background: \"#fff \",\r\n      });\r\n\r\n     \r\n\r\n    },\r\n    [registerUser.rejected]: (state, action) => {\r\n      // state.rejected = action.payload.email[0];\r\n      console.log(\"rejected\");\r\n      // toast.error(action.payload.email[0]);\r\n      // console.log(action.payload.password);\r\n      // Swal.fire({\r\n      //   text: action.payload.email[0],\r\n\r\n      //   width: 250,\r\n      //   // customClass: 'swal-height',\r\n      //   icon:'error',\r\n      //   // heightAuto: false,\r\n      //   // padding: '3em',\r\n      //   color: '#716add',\r\n      //   background: '#fff ',\r\n      // })\r\n      // mp3spider@icloud.com\r\n      if (action.payload.email) {\r\n        Swal.fire({\r\n          customClass: {\r\n            container: \"swal-overlay\",\r\n            title: \"title-color\",\r\n          },\r\n          title: JSON.stringify(action.payload.email[0]),\r\n          confirmButtonColor: \"#113A58\",\r\n          width: 250,\r\n          icon: \"error\",\r\n          color: \"#716add\",\r\n          background: \"#fff \",\r\n        });\r\n      }else if(action.payload.password[0] || action.payload.password[1]\r\n        || action.payload.password[2]){\r\n        Swal.fire({\r\n          customClass: {\r\n            container: \"swal-overlay\",\r\n            title: \"title-color\",\r\n          },\r\n          // title: JSON.stringify(action.payload.password[0]),\r\n          title: action.payload.password[0] || action.payload.password[1]\r\n          || action.payload.password[2],\r\n          confirmButtonColor: \"#113A58\",\r\n          width: 250,\r\n          icon: \"error\",\r\n          color: \"#716add\",\r\n          background: \"#fff \",\r\n        });\r\n      }\r\n      // else {\r\n      //   Swal.fire({\r\n      //     customClass: {\r\n      //       container: \"swal-overlay\",\r\n      //       title: \"title-color\",\r\n      //     },\r\n      //     // title: JSON.stringify(action.payload.password[0]),\r\n      //     title: JSON.stringify(action.payload.password[0]),\r\n      //     confirmButtonColor: \"#113A58\",\r\n      //     width: 250,\r\n      //     icon: \"error\",\r\n      //     color: \"#716add\",\r\n      //     background: \"#fff \",\r\n      //   });\r\n      // }\r\n      // Swal.fire({\r\n      //   customClass: {\r\n      //     container: \"swal-overlay\",\r\n      //     title: \"title-color\",\r\n      //   },\r\n      //   title: JSON.stringify(action.payload),\r\n      //   confirmButtonColor: \"#113A58\",\r\n      //   width: 250,\r\n      //   icon: \"error\",\r\n      //   color: \"#716add\",\r\n      //   background: \"#fff \",\r\n      // });\r\n    },\r\n  },\r\n});\r\nexport default authReducer.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}